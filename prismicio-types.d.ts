// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type PageHomeDocumentDataSlicesSlice =
  | FaqSlice
  | BlogCarouselSlice
  | CtaBannerSlice
  | TestimonialsSlice
  | AboutIntroSlice
  | ExpertiseListSlice
  | ServicesGridSlice
  | FeatureCardsSlice
  | HeroSlice;

/**
 * Content for Home page documents
 */
interface PageHomeDocumentData {
  /**
   * Slice Zone field in *Home page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page_home.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<PageHomeDocumentDataSlicesSlice> /**
   * Meta Title field in *Home page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: page_home.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Home page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: page_home.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Home page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page_home.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Home page document from Prismic
 *
 * - **API ID**: `page_home`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageHomeDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<PageHomeDocumentData>,
    "page_home",
    Lang
  >;

type PageSectorDocumentDataSlicesSlice =
  | CtaBannerSlice
  | TestimonialsSlice
  | BlogCarouselSlice
  | AboutIntroSlice
  | FaqSlice
  | ServicesGridSlice
  | ExpertiseListSlice
  | FeatureCardsSlice
  | HeroSlice;

/**
 * Content for Sector Page documents
 */
interface PageSectorDocumentData {
  /**
   * Slice Zone field in *Sector Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page_sector.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<PageSectorDocumentDataSlicesSlice> /**
   * Meta Title field in *Sector Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: page_sector.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Sector Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: page_sector.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Sector Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page_sector.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Sector Page document from Prismic
 *
 * - **API ID**: `page_sector`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageSectorDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<PageSectorDocumentData>,
    "page_sector",
    Lang
  >;

export type AllDocumentTypes = PageHomeDocument | PageSectorDocument;

/**
 * Primary content in *AboutIntro → Default → Primary*
 */
export interface AboutIntroSliceDefaultPrimary {
  /**
   * Kicker field in *AboutIntro → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: about_intro.default.primary.kicker
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  kicker: prismic.RichTextField;

  /**
   * Heading field in *AboutIntro → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: about_intro.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *AboutIntro → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: about_intro.default.primary.body
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  body: prismic.RichTextField;

  /**
   * CTA label field in *AboutIntro → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: about_intro.default.primary.cta_label
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  cta_label: prismic.KeyTextField;

  /**
   * CTA link field in *AboutIntro → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: about_intro.default.primary.cta_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  cta_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;

  /**
   * Main image field in *AboutIntro → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: about_intro.default.primary.main_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  main_image: prismic.ImageField<never>;

  /**
   * Stat value field in *AboutIntro → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: +50 clients
   * - **API ID Path**: about_intro.default.primary.stat_value
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  stat_value: prismic.KeyTextField;

  /**
   * Stat text field in *AboutIntro → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: about_intro.default.primary.stat_text
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  stat_text: prismic.RichTextField;

  /**
   * Secondary image field in *AboutIntro → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: about_intro.default.primary.secondary_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  secondary_image: prismic.ImageField<never>;
}

/**
 * Default variation for AboutIntro Slice
 *
 * - **API ID**: `default`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type AboutIntroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<AboutIntroSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *AboutIntro*
 */
type AboutIntroSliceVariation = AboutIntroSliceDefault;

/**
 * AboutIntro Shared Slice
 *
 * - **API ID**: `about_intro`
 * - **Description**: About section with text + CTA and right collage
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type AboutIntroSlice = prismic.SharedSlice<
  "about_intro",
  AboutIntroSliceVariation
>;

/**
 * Primary content in *BlogCarousel → Default → Primary*
 */
export interface BlogCarouselSliceDefaultPrimary {
  /**
   * Kicker field in *BlogCarousel → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: blog_carousel.default.primary.kicker
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  kicker: prismic.RichTextField;
}

/**
 * Primary content in *BlogCarousel → Items*
 */
export interface BlogCarouselSliceDefaultItem {
  /**
   * Post field in *BlogCarousel → Items*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: blog_carousel.items[].post
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  post: prismic.ContentRelationshipField;
}

/**
 * Default variation for BlogCarousel Slice
 *
 * - **API ID**: `default`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type BlogCarouselSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<BlogCarouselSliceDefaultPrimary>,
  Simplify<BlogCarouselSliceDefaultItem>
>;

/**
 * Slice variation for *BlogCarousel*
 */
type BlogCarouselSliceVariation = BlogCarouselSliceDefault;

/**
 * BlogCarousel Shared Slice
 *
 * - **API ID**: `blog_carousel`
 * - **Description**: Horizontal carousel of blog posts via relationships
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type BlogCarouselSlice = prismic.SharedSlice<
  "blog_carousel",
  BlogCarouselSliceVariation
>;

/**
 * Primary content in *CtaBanner → Default → Primary*
 */
export interface CtaBannerSliceDefaultPrimary {
  /**
   * Background image field in *CtaBanner → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: cta_banner.default.primary.background_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  background_image: prismic.ImageField<never>;

  /**
   * Heading field in *CtaBanner → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cta_banner.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Subheading field in *CtaBanner → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cta_banner.default.primary.subheading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  subheading: prismic.RichTextField;

  /**
   * CTA label field in *CtaBanner → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cta_banner.default.primary.cta_label
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  cta_label: prismic.KeyTextField;

  /**
   * CTA link field in *CtaBanner → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: cta_banner.default.primary.cta_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  cta_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Default variation for CtaBanner Slice
 *
 * - **API ID**: `default`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CtaBannerSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CtaBannerSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *CtaBanner*
 */
type CtaBannerSliceVariation = CtaBannerSliceDefault;

/**
 * CtaBanner Shared Slice
 *
 * - **API ID**: `cta_banner`
 * - **Description**: Full-width CTA banner with background image
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CtaBannerSlice = prismic.SharedSlice<
  "cta_banner",
  CtaBannerSliceVariation
>;

/**
 * Primary content in *ExpertiseList → Default → Primary*
 */
export interface ExpertiseListSliceDefaultPrimary {
  /**
   * Section heading field in *ExpertiseList → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: expertise_list.default.primary.section_heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  section_heading: prismic.RichTextField;
}

/**
 * Primary content in *ExpertiseList → Items*
 */
export interface ExpertiseListSliceDefaultItem {
  /**
   * Title field in *ExpertiseList → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: expertise_list.items[].title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Inline image field in *ExpertiseList → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: expertise_list.items[].inline_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  inline_image: prismic.ImageField<never>;

  /**
   * CTA label field in *ExpertiseList → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Voir plus
   * - **API ID Path**: expertise_list.items[].cta_label
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  cta_label: prismic.KeyTextField;

  /**
   * CTA link field in *ExpertiseList → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: expertise_list.items[].cta_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  cta_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Default variation for ExpertiseList Slice
 *
 * - **API ID**: `default`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ExpertiseListSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ExpertiseListSliceDefaultPrimary>,
  Simplify<ExpertiseListSliceDefaultItem>
>;

/**
 * Slice variation for *ExpertiseList*
 */
type ExpertiseListSliceVariation = ExpertiseListSliceDefault;

/**
 * ExpertiseList Shared Slice
 *
 * - **API ID**: `expertise_list`
 * - **Description**: Vertical list of expertise domains with black CTA
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ExpertiseListSlice = prismic.SharedSlice<
  "expertise_list",
  ExpertiseListSliceVariation
>;

/**
 * Primary content in *Faq → Default → Primary*
 */
export interface FaqSliceDefaultPrimary {
  /**
   * Kicker field in *Faq → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: faq.default.primary.kicker
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  kicker: prismic.RichTextField;
}

/**
 * Primary content in *Faq → Items*
 */
export interface FaqSliceDefaultItem {
  /**
   * Question field in *Faq → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: faq.items[].question
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  question: prismic.RichTextField;

  /**
   * Answer field in *Faq → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: faq.items[].answer
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  answer: prismic.RichTextField;
}

/**
 * Default variation for Faq Slice
 *
 * - **API ID**: `default`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FaqSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<FaqSliceDefaultPrimary>,
  Simplify<FaqSliceDefaultItem>
>;

/**
 * Slice variation for *Faq*
 */
type FaqSliceVariation = FaqSliceDefault;

/**
 * Faq Shared Slice
 *
 * - **API ID**: `faq`
 * - **Description**: Frequently asked questions with collapsible items
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FaqSlice = prismic.SharedSlice<"faq", FaqSliceVariation>;

/**
 * Primary content in *FeatureCards → Default → Primary*
 */
export interface FeatureCardsSliceDefaultPrimary {
  /**
   * Section heading field in *FeatureCards → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_cards.default.primary.section_heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  section_heading: prismic.RichTextField;
}

/**
 * Primary content in *FeatureCards → Items*
 */
export interface FeatureCardsSliceDefaultItem {
  /**
   * Visual field in *FeatureCards → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_cards.items[].visual
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  visual: prismic.ImageField<never>;

  /**
   * Pill field in *FeatureCards → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_cards.items[].pill
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  pill: prismic.RichTextField;

  /**
   * Title field in *FeatureCards → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_cards.items[].title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Description field in *FeatureCards → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: feature_cards.items[].description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;
}

/**
 * Default variation for FeatureCards Slice
 *
 * - **API ID**: `default`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeatureCardsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<FeatureCardsSliceDefaultPrimary>,
  Simplify<FeatureCardsSliceDefaultItem>
>;

/**
 * Slice variation for *FeatureCards*
 */
type FeatureCardsSliceVariation = FeatureCardsSliceDefault;

/**
 * FeatureCards Shared Slice
 *
 * - **API ID**: `feature_cards`
 * - **Description**: Grid of cards highlighting features/values
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeatureCardsSlice = prismic.SharedSlice<
  "feature_cards",
  FeatureCardsSliceVariation
>;

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HeroSliceDefaultPrimary {
  /**
   * Kicker field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.kicker
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  kicker: prismic.RichTextField;

  /**
   * Heading field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Subheading field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.subheading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  subheading: prismic.RichTextField;

  /**
   * Background image field in *Hero → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.background_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  background_image: prismic.ImageField<never>;
}

/**
 * Primary content in *Hero → Items*
 */
export interface HeroSliceDefaultItem {
  /**
   * Button label field in *Hero → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.items[].button_label
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  button_label: prismic.KeyTextField;

  /**
   * Button link field in *Hero → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.items[].button_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  button_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;

  /**
   * Button variant field in *Hero → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: primary
   * - **API ID Path**: hero.items[].button_variant
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  button_variant: prismic.SelectField<
    "primary" | "secondary" | "ghost",
    "filled"
  >;

  /**
   * Open in new tab field in *Hero → Items*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.items[].button_new_tab
   * - **Documentation**: https://prismic.io/docs/fields/boolean
   */
  button_new_tab: prismic.BooleanField;

  /**
   * Show arrow field in *Hero → Items*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.items[].button_show_arrow
   * - **Documentation**: https://prismic.io/docs/fields/boolean
   */
  button_show_arrow: prismic.BooleanField;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  Simplify<HeroSliceDefaultItem>
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Large hero with background image, heading, subheading and CTAs
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSlice = prismic.SharedSlice<"hero", HeroSliceVariation>;

/**
 * Primary content in *ServicesGrid → Default → Primary*
 */
export interface ServicesGridSliceDefaultPrimary {
  /**
   * Kicker field in *ServicesGrid → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.default.primary.kicker
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  kicker: prismic.RichTextField;

  /**
   * Heading field in *ServicesGrid → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;
}

/**
 * Primary content in *ServicesGrid → Items*
 */
export interface ServicesGridSliceDefaultItem {
  /**
   * Title field in *ServicesGrid → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.items[].title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Description field in *ServicesGrid → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.items[].description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;
}

/**
 * Default variation for ServicesGrid Slice
 *
 * - **API ID**: `default`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ServicesGridSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ServicesGridSliceDefaultPrimary>,
  Simplify<ServicesGridSliceDefaultItem>
>;

/**
 * Slice variation for *ServicesGrid*
 */
type ServicesGridSliceVariation = ServicesGridSliceDefault;

/**
 * ServicesGrid Shared Slice
 *
 * - **API ID**: `services_grid`
 * - **Description**: Left heading with two-column list of services
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ServicesGridSlice = prismic.SharedSlice<
  "services_grid",
  ServicesGridSliceVariation
>;

/**
 * Primary content in *Testimonials → Default → Primary*
 */
export interface TestimonialsSliceDefaultPrimary {
  /**
   * Kicker field in *Testimonials → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: testimonials.default.primary.kicker
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  kicker: prismic.RichTextField;
}

/**
 * Primary content in *Testimonials → Items*
 */
export interface TestimonialsSliceDefaultItem {
  /**
   * Image field in *Testimonials → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: testimonials.items[].image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * Quote field in *Testimonials → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: testimonials.items[].quote
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  quote: prismic.RichTextField;

  /**
   * Author field in *Testimonials → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: testimonials.items[].author
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  author: prismic.RichTextField;

  /**
   * CTA label field in *Testimonials → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: testimonials.items[].cta_label
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  cta_label: prismic.KeyTextField;

  /**
   * CTA link field in *Testimonials → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: testimonials.items[].cta_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  cta_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Default variation for Testimonials Slice
 *
 * - **API ID**: `default`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type TestimonialsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TestimonialsSliceDefaultPrimary>,
  Simplify<TestimonialsSliceDefaultItem>
>;

/**
 * Slice variation for *Testimonials*
 */
type TestimonialsSliceVariation = TestimonialsSliceDefault;

/**
 * Testimonials Shared Slice
 *
 * - **API ID**: `testimonials`
 * - **Description**: Cards with image, quote, author, optional CTA
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type TestimonialsSlice = prismic.SharedSlice<
  "testimonials",
  TestimonialsSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      PageHomeDocument,
      PageHomeDocumentData,
      PageHomeDocumentDataSlicesSlice,
      PageSectorDocument,
      PageSectorDocumentData,
      PageSectorDocumentDataSlicesSlice,
      AllDocumentTypes,
      AboutIntroSlice,
      AboutIntroSliceDefaultPrimary,
      AboutIntroSliceVariation,
      AboutIntroSliceDefault,
      BlogCarouselSlice,
      BlogCarouselSliceDefaultPrimary,
      BlogCarouselSliceDefaultItem,
      BlogCarouselSliceVariation,
      BlogCarouselSliceDefault,
      CtaBannerSlice,
      CtaBannerSliceDefaultPrimary,
      CtaBannerSliceVariation,
      CtaBannerSliceDefault,
      ExpertiseListSlice,
      ExpertiseListSliceDefaultPrimary,
      ExpertiseListSliceDefaultItem,
      ExpertiseListSliceVariation,
      ExpertiseListSliceDefault,
      FaqSlice,
      FaqSliceDefaultPrimary,
      FaqSliceDefaultItem,
      FaqSliceVariation,
      FaqSliceDefault,
      FeatureCardsSlice,
      FeatureCardsSliceDefaultPrimary,
      FeatureCardsSliceDefaultItem,
      FeatureCardsSliceVariation,
      FeatureCardsSliceDefault,
      HeroSlice,
      HeroSliceDefaultPrimary,
      HeroSliceDefaultItem,
      HeroSliceVariation,
      HeroSliceDefault,
      ServicesGridSlice,
      ServicesGridSliceDefaultPrimary,
      ServicesGridSliceDefaultItem,
      ServicesGridSliceVariation,
      ServicesGridSliceDefault,
      TestimonialsSlice,
      TestimonialsSliceDefaultPrimary,
      TestimonialsSliceDefaultItem,
      TestimonialsSliceVariation,
      TestimonialsSliceDefault,
    };
  }
}
